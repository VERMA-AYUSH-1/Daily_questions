1347. Minimum Number of Steps to Make Two Strings Anagram

class Solution:
    def minSteps(self, s: str, t: str) -> int:

        count = 0
        for i in s:
            if i in t:
                t = t.replace(i,"",1)
            else:
                count = count + 1
        return count
        # c=0
        # t=list(t)
        # n=len(s)
        # for i in range(len(s)):
        #     if s[i] in t:
        #         t.remove(s[i])
        #     else:
        #         c+=1

        
        # return c

2265. Count Nodes Equal to Average of Subtree

class Solution:
    def averageOfSubtree(self, root: TreeNode) -> int:
        def post(root,count):
            if root== None:
                return 0,0
            if not root.left and not root.right:
                count[0]+=1
                return root.val,1
            
            l,lc=post(root.left,count)
            r,rc=post(root.right,count)

            s=l+r+root.val
            sc=lc+rc+1
            # print(s,sc)

            if (s//sc)==root.val:
                count[0]=count[0]+1
            
            return s,sc

        count=[0]
        post(root,count)
        return count[0]
